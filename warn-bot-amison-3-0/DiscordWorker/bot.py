import discord
from discord.ext import commands
from discord.ui import View, Button
import json
import os
import re
from datetime import datetime

# üîπ 1. Flask-—Å–µ—Ä–≤–µ—Ä –¥–ª—è UptimeRobot
from flask import Flask
import threading

app = Flask(__name__)

@app.route('/')
def home():
    return "Bot is alive!"

def run_web():
    try:
        app.run(host="0.0.0.0", port=5000, use_reloader=False)
    except OSError as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] Flask —Å–µ—Ä–≤–µ—Ä –Ω–µ —Å–º–æ–≥ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è: {e}')

threading.Thread(target=run_web, daemon=True).start()


# üîπ 2. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Discord
intents = discord.Intents.default()
intents.message_content = True
intents.members = True

bot = commands.Bot(command_prefix='!', intents=intents)

WARNS_FILE = 'warns.json'
TICKETS_FILE = 'whitelist_tickets.json'

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ID —Ä–æ–ª–µ–π
ADMIN_ROLE_ID = 1193894492663713792
MOD_ROLE_ID = 1037412954481639476
OWNER_ROLE_ID = 1037411767611052182
PERMA_BAN_ROLE_ID = 1424009252137205864
LOG_CHANNEL_ID = 1431367741553639498


# üîπ 3. –†–∞–±–æ—Ç–∞ —Å JSON-—Ñ–∞–π–ª–æ–º –≤–∞—Ä–Ω–æ–≤
def load_warns():
    if os.path.exists(WARNS_FILE):
        with open(WARNS_FILE, 'r') as f:
            return json.load(f)
    return {}

def save_warns(warns):
    with open(WARNS_FILE, 'w') as f:
        json.dump(warns, f, indent=4)

warns_data = load_warns()


# üîπ 4. –†–∞–±–æ—Ç–∞ —Å –∑–∞—è–≤–∫–∞–º–∏ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
def load_tickets():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫"""
    try:
        if os.path.exists(TICKETS_FILE):
            with open(TICKETS_FILE, 'r', encoding='utf-8') as f:
                return json.load(f)
        return {"last_ticket_number": 0, "tickets": {}}
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∑–∞—è–≤–æ–∫: {e}')
        return {"last_ticket_number": 0, "tickets": {}}

def save_tickets(data):
    """–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∑–∞—è–≤–æ–∫"""
    try:
        with open(TICKETS_FILE, 'w', encoding='utf-8') as f:
            json.dump(data, f, indent=2, ensure_ascii=False)
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –ó–∞—è–≤–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–æ–∫: {e}')

def get_next_ticket_number(guild_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–≥–æ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏"""
    try:
        data = load_tickets()
        data['last_ticket_number'] += 1
        save_tickets(data)
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –í—ã–¥–∞–Ω –Ω–æ–º–µ—Ä –∑–∞—è–≤–∫–∏: {data["last_ticket_number"]}')
        return data['last_ticket_number']
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–æ–º–µ—Ä–∞ –∑–∞—è–≤–∫–∏: {e}')
        return 1

def create_ticket(guild_id, user_id, channel_id, nickname):
    """–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞—è–≤–∫–∏"""
    try:
        data = load_tickets()
        ticket_number = data['last_ticket_number']
        
        ticket_key = f"{guild_id}_{user_id}_{ticket_number}"
        data['tickets'][ticket_key] = {
            'ticket_number': ticket_number,
            'guild_id': str(guild_id),
            'user_id': str(user_id),
            'channel_id': str(channel_id),
            'nickname': nickname,
            'status': 'pending',
            'created_at': datetime.now().isoformat(),
            'updated_at': datetime.now().isoformat()
        }
        
        save_tickets(data)
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ #{ticket_number} –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}')
        return ticket_number
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}')
        return None

def get_user_tickets(guild_id, user_id):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        data = load_tickets()
        user_tickets = []
        
        for ticket_key, ticket_data in data['tickets'].items():
            if ticket_data['guild_id'] == str(guild_id) and ticket_data['user_id'] == str(user_id):
                user_tickets.append(ticket_data)
        
        user_tickets.sort(key=lambda x: x.get('created_at', ''), reverse=True)
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –ù–∞–π–¥–µ–Ω–æ {len(user_tickets)} –∑–∞—è–≤–æ–∫ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}')
        return user_tickets
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞—è–≤–æ–∫: {e}')
        return []

def update_ticket_status(guild_id, user_id, ticket_number, status):
    """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏"""
    try:
        data = load_tickets()
        ticket_key = f"{guild_id}_{user_id}_{ticket_number}"
        
        if ticket_key in data['tickets']:
            data['tickets'][ticket_key]['status'] = status
            data['tickets'][ticket_key]['updated_at'] = datetime.now().isoformat()
            save_tickets(data)
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –°—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ #{ticket_number} –æ–±–Ω–æ–≤–ª–µ–Ω –Ω–∞: {status}')
            return True
        else:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: –∑–∞—è–≤–∫–∞ #{ticket_number} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
            return False
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –∑–∞—è–≤–∫–∏: {e}')
        return False


# üîπ 5. –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
async def send_notification(bot, guild_id, ticket_number, decision, username):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ —Ä–µ—à–µ–Ω–∏–∏ –ø–æ –∑–∞—è–≤–∫–µ"""
    try:
        guild = bot.get_guild(int(guild_id))
        if not guild:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: —Å–µ—Ä–≤–µ—Ä {guild_id} –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return
        
        log_channel = guild.get_channel(LOG_CHANNEL_ID)
        if not log_channel:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: –∫–∞–Ω–∞–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω')
            return
        
        decision_text = "–ü—Ä–∏–Ω—è—Ç–æ" if decision == "approved" else "–û—Ç–∫–∞–∑–∞–Ω–æ"
        color = discord.Color.green() if decision == "approved" else discord.Color.red()
        
        embed = discord.Embed(
            title=f"üìã –ó–∞—è–≤–∫–∞ #{ticket_number}",
            description=f"**–°—Ç–∞—Ç—É—Å:** {decision_text}\n**–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:** {username}",
            color=color,
            timestamp=datetime.now()
        )
        
        await log_channel.send(embed=embed)
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ: –ó–∞—è–≤–∫–∞ #{ticket_number} ‚Äî {decision_text} ‚Äî {username}')
    except Exception as e:
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}')


# üîπ 6. Discord Views –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∞–º–∏

class WhitelistDecisionView(View):
    """–ü–µ—Ä–≤–∞—è –≥—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫: –ø—Ä–∏–Ω—è—Ç–∏–µ/–æ—Ç–∫–∞–∑"""
    
    def __init__(self, ticket_number, guild_id, user_id, username):
        super().__init__(timeout=None)
        self.ticket_number = ticket_number
        self.guild_id = guild_id
        self.user_id = user_id
        self.username = username
        
        approve_button = Button(
            label="–î–æ–±–∞–≤–ª–µ–Ω –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫",
            style=discord.ButtonStyle.success,
            custom_id=f"whitelist_approve_{ticket_number}"
        )
        approve_button.callback = self.approve_callback
        
        deny_button = Button(
            label="–û—Ç–∫–∞–∑ –≤ –±–µ–ª–æ–º —Å–ø–∏—Å–∫–µ",
            style=discord.ButtonStyle.danger,
            custom_id=f"whitelist_deny_{ticket_number}"
        )
        deny_button.callback = self.deny_callback
        
        self.add_item(approve_button)
        self.add_item(deny_button)
    
    async def approve_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è –∑–∞—è–≤–∫–∏"""
        try:
            if not await self.check_permissions(interaction):
                return
            
            update_ticket_status(self.guild_id, self.user_id, self.ticket_number, 'approved')
            await send_notification(bot, self.guild_id, self.ticket_number, 'approved', self.username)
            
            await interaction.response.edit_message(
                content=f"‚úÖ –ó–∞—è–≤–∫–∞ #{self.ticket_number} –æ–¥–æ–±—Ä–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                view=WhitelistCloseView(self.ticket_number, self.guild_id, self.user_id)
            )
            
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –ó–∞—è–≤–∫–∞ #{self.ticket_number} –æ–¥–æ–±—Ä–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
        except Exception as e:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}')
            await interaction.response.send_message(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {str(e)}', ephemeral=True)
    
    async def deny_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫–∞–∑–∞ –≤ –∑–∞—è–≤–∫–µ"""
        try:
            if not await self.check_permissions(interaction):
                return
            
            update_ticket_status(self.guild_id, self.user_id, self.ticket_number, 'denied')
            await send_notification(bot, self.guild_id, self.ticket_number, 'denied', self.username)
            
            await interaction.response.edit_message(
                content=f"‚ùå –ó–∞—è–≤–∫–∞ #{self.ticket_number} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                view=WhitelistCloseView(self.ticket_number, self.guild_id, self.user_id)
            )
            
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –ó–∞—è–≤–∫–∞ #{self.ticket_number} –æ—Ç–∫–ª–æ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
        except Exception as e:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {e}')
            await interaction.response.send_message(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞—è–≤–∫–∏: {str(e)}', ephemeral=True)
    
    async def check_permissions(self, interaction: discord.Interaction):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (–∞–¥–º–∏–Ω –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ç–æ—Ä)"""
        member = interaction.user
        has_permission = any(role.id in [ADMIN_ROLE_ID, MOD_ROLE_ID] for role in member.roles)
        
        if not has_permission:
            await interaction.response.send_message('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!', ephemeral=True)
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ –¥–ª—è {member.name} (–Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∞/–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞)')
        
        return has_permission


class WhitelistCloseView(View):
    """–í—Ç–æ—Ä–∞—è –≥—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫: –∑–∞–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞"""
    
    def __init__(self, ticket_number, guild_id, user_id):
        super().__init__(timeout=None)
        self.ticket_number = ticket_number
        self.guild_id = guild_id
        self.user_id = user_id
        
        close_button = Button(
            label="–ó–∞–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
            style=discord.ButtonStyle.danger,
            custom_id=f"whitelist_close_{ticket_number}"
        )
        close_button.callback = self.close_callback
        
        self.add_item(close_button)
    
    async def close_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞"""
        try:
            if not await self.check_permissions(interaction):
                return
            
            channel = interaction.channel
            
            overwrites = channel.overwrites
            for target, overwrite in overwrites.items():
                if target != interaction.guild.me and target.id != OWNER_ROLE_ID:
                    overwrite.send_messages = False
                    await channel.set_permissions(target, overwrite=overwrite)
            
            update_ticket_status(self.guild_id, self.user_id, self.ticket_number, 'closed')
            
            await interaction.response.edit_message(
                content=f"üîí –¢–∏–∫–µ—Ç #{self.ticket_number} –∑–∞–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                view=WhitelistManageView(self.ticket_number, self.guild_id, self.user_id, channel.id)
            )
            
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –¢–∏–∫–µ—Ç #{self.ticket_number} –∑–∞–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
        except Exception as e:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}')
            await interaction.response.send_message(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {str(e)}', ephemeral=True)
    
    async def check_permissions(self, interaction: discord.Interaction):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)"""
        member = interaction.user
        has_permission = any(role.id == OWNER_ROLE_ID for role in member.roles)
        
        if not has_permission:
            await interaction.response.send_message('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!', ephemeral=True)
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ –¥–ª—è {member.name} (–Ω–µ—Ç –ø—Ä–∞–≤ –≤–ª–∞–¥–µ–ª—å—Ü–∞)')
        
        return has_permission


class WhitelistManageView(View):
    """–¢—Ä–µ—Ç—å—è –≥—Ä—É–ø–ø–∞ –∫–Ω–æ–ø–æ–∫: —É–¥–∞–ª–µ–Ω–∏–µ/–æ—Ç–∫—Ä—ã—Ç–∏–µ —Ç–∏–∫–µ—Ç–∞"""
    
    def __init__(self, ticket_number, guild_id, user_id, channel_id):
        super().__init__(timeout=None)
        self.ticket_number = ticket_number
        self.guild_id = guild_id
        self.user_id = user_id
        self.channel_id = channel_id
        
        delete_button = Button(
            label="–£–¥–∞–ª–∏—Ç—å —Ç–∏–∫–µ—Ç",
            style=discord.ButtonStyle.danger,
            custom_id=f"whitelist_delete_{ticket_number}"
        )
        delete_button.callback = self.delete_callback
        
        reopen_button = Button(
            label="–û—Ç–∫—Ä—ã—Ç—å —Ç–∏–∫–µ—Ç",
            style=discord.ButtonStyle.success,
            custom_id=f"whitelist_reopen_{ticket_number}"
        )
        reopen_button.callback = self.reopen_callback
        
        self.add_item(delete_button)
        self.add_item(reopen_button)
    
    async def delete_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ç–∏–∫–µ—Ç–∞"""
        try:
            if not await self.check_permissions(interaction):
                return
            
            channel = interaction.channel
            
            update_ticket_status(self.guild_id, self.user_id, self.ticket_number, 'deleted')
            
            await interaction.response.send_message(
                f"üóëÔ∏è –¢–∏–∫–µ—Ç #{self.ticket_number} –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥...",
                ephemeral=False
            )
            
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –¢–∏–∫–µ—Ç #{self.ticket_number} —É–¥–∞–ª–µ–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
            
            import asyncio
            await asyncio.sleep(5)
            await channel.delete()
            
        except Exception as e:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}')
            if not interaction.response.is_done():
                await interaction.response.send_message(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ —Ç–∏–∫–µ—Ç–∞: {str(e)}', ephemeral=True)
    
    async def reopen_callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è —Ç–∏–∫–µ—Ç–∞"""
        try:
            if not await self.check_permissions(interaction):
                return
            
            channel = interaction.channel
            guild = interaction.guild
            
            admin_role = guild.get_role(ADMIN_ROLE_ID)
            mod_role = guild.get_role(MOD_ROLE_ID)
            member = guild.get_member(int(self.user_id))
            
            if admin_role:
                await channel.set_permissions(admin_role, send_messages=True, read_messages=True)
            if mod_role:
                await channel.set_permissions(mod_role, send_messages=True, read_messages=True)
            if member:
                await channel.set_permissions(member, send_messages=True, read_messages=True)
            
            update_ticket_status(self.guild_id, self.user_id, self.ticket_number, 'reopened')
            
            await interaction.response.edit_message(
                content=f"üîì –¢–∏–∫–µ—Ç #{self.ticket_number} –æ—Ç–∫—Ä—ã—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º {interaction.user.mention}",
                view=WhitelistCloseView(self.ticket_number, self.guild_id, self.user_id)
            )
            
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –¢–∏–∫–µ—Ç #{self.ticket_number} –æ—Ç–∫—Ä—ã—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {interaction.user.name}')
        except Exception as e:
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {e}')
            await interaction.response.send_message(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ —Ç–∏–∫–µ—Ç–∞: {str(e)}', ephemeral=True)
    
    async def check_permissions(self, interaction: discord.Interaction):
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ (—Ç–æ–ª—å–∫–æ –≤–ª–∞–¥–µ–ª–µ—Ü)"""
        member = interaction.user
        has_permission = any(role.id == OWNER_ROLE_ID for role in member.roles)
        
        if not has_permission:
            await interaction.response.send_message('‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —ç—Ç–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è!', ephemeral=True)
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û—Ç–∫–∞–∑ –≤ –¥–æ—Å—Ç—É–ø–µ –¥–ª—è {member.name} (–Ω–µ—Ç –ø—Ä–∞–≤ –≤–ª–∞–¥–µ–ª—å—Ü–∞)')
        
        return has_permission


# üîπ 7. –°–æ–±—ã—Ç–∏—è Discord
@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω!')
    print(f'ID: {bot.user.id}')
    print('------')
    
    print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è persistent views...')
    
    data = load_tickets()
    for ticket_key, ticket_data in data['tickets'].items():
        ticket_number = ticket_data['ticket_number']
        guild_id = ticket_data['guild_id']
        user_id = ticket_data['user_id']
        username = ticket_data.get('nickname', 'Unknown')
        status = ticket_data.get('status', 'pending')
        channel_id = ticket_data.get('channel_id')
        
        if status == 'pending':
            bot.add_view(WhitelistDecisionView(ticket_number, guild_id, user_id, username))
        elif status in ['approved', 'denied', 'reopened']:
            bot.add_view(WhitelistCloseView(ticket_number, guild_id, user_id))
        elif status == 'closed':
            bot.add_view(WhitelistManageView(ticket_number, guild_id, user_id, channel_id))
    
    print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] Persistent views –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã')


@bot.event
async def on_message(message):
    if message.author.bot and message.embeds:
        for embed in message.embeds:
            if embed.author and '[WARN]' in str(embed.author.name):
                try:
                    user_id = None
                    for field in embed.fields:
                        if field.name == 'User':
                            user_mention = field.value
                            match = re.search(r'<@(\d+)>', user_mention)
                            if match:
                                user_id = match.group(1)
                                break

                    if not user_id:
                        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ embed')
                        continue

                    guild_id = str(message.guild.id)

                    if guild_id not in warns_data:
                        warns_data[guild_id] = {}

                    if user_id not in warns_data[guild_id]:
                        warns_data[guild_id][user_id] = 0

                    warns_data[guild_id][user_id] += 1
                    save_warns(warns_data)

                    warn_count = warns_data[guild_id][user_id]

                    member = message.guild.get_member(int(user_id))
                    if member:
                        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –í–∞—Ä–Ω –≤—ã–¥–∞–Ω: {member.name} ({user_id}) - –í—Å–µ–≥–æ –≤–∞—Ä–Ω–æ–≤: {warn_count}')

                        if warn_count == 1:
                            role = discord.utils.get(message.guild.roles, name='Warn1lvl')
                            if role:
                                await member.add_roles(role)
                                print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –†–æ–ª—å Warn1lvl –≤—ã–¥–∞–Ω–∞: {member.name}')
                            else:
                                print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: –†–æ–ª—å Warn1lvl –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

                        elif warn_count == 2:
                            role1 = discord.utils.get(message.guild.roles, name='Warn1lvl')
                            role2 = discord.utils.get(message.guild.roles, name='Warn2lvl')

                            if role1 and role1 in member.roles:
                                await member.remove_roles(role1)
                                print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –†–æ–ª—å Warn1lvl —Å–Ω—è—Ç–∞: {member.name}')

                            if role2:
                                await member.add_roles(role2)
                                print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –†–æ–ª—å Warn2lvl –≤—ã–¥–∞–Ω–∞: {member.name}')
                            else:
                                print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: –†–æ–ª—å Warn2lvl –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!')

                        elif warn_count > 2:
                            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {member.name} —É–∂–µ {warn_count} –≤–∞—Ä–Ω–æ–≤')
                    else:
                        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: –£—á–∞—Å—Ç–Ω–∏–∫ —Å ID {user_id} –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ')

                except Exception as e:
                    print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—Ä–Ω–∞: {e}')

    await bot.process_commands(message)


# üîπ 8. –ö–æ–º–∞–Ω–¥–∞ /nick –¥–ª—è –∑–∞—è–≤–∫–∏ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫
@bot.command(name='nick')
async def check_nickname(ctx, requested_nick: str):
    """
    –ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏ –Ω–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫.
    –°–æ–∑–¥–∞—ë—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–∞–Ω–∞–ª –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏.
    """
    try:
        guild = ctx.guild
        member = ctx.author
        
        admin_role = guild.get_role(ADMIN_ROLE_ID)
        mod_role = guild.get_role(MOD_ROLE_ID)
        
        if not admin_role or not mod_role:
            await ctx.send('‚ùå –û—à–∏–±–∫–∞: —Ä–æ–ª–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏–ª–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ!')
            print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê: —Ä–æ–ª–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /nick –Ω–µ –Ω–∞–π–¥–µ–Ω—ã')
            return
        
        ticket_number = get_next_ticket_number(str(guild.id))
        
        channel_name = f'–∑–∞—è–≤–∫–∞-–≤-–±–µ–ª—ã–π-—Å–ø–∏—Å–æ–∫-{ticket_number}'
        
        overwrites = {
            guild.default_role: discord.PermissionOverwrite(read_messages=False),
            member: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            admin_role: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            mod_role: discord.PermissionOverwrite(read_messages=True, send_messages=True),
            guild.me: discord.PermissionOverwrite(read_messages=True, send_messages=True)
        }
        
        category = discord.utils.get(guild.categories, name='–ü—Ä–æ–≤–µ—Ä–∫–∏') or None
        channel = await guild.create_text_channel(
            name=channel_name,
            overwrites=overwrites,
            category=category,
            topic=f'–ó–∞—è–≤–∫–∞ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ #{ticket_number} –¥–ª—è {member.name}'
        )
        
        create_ticket(str(guild.id), str(member.id), str(channel.id), requested_nick)
        
        account_age = datetime.now(member.created_at.tzinfo) - member.created_at
        account_age_days = account_age.days
        
        perma_ban_role = guild.get_role(PERMA_BAN_ROLE_ID)
        has_perma_ban = perma_ban_role in member.roles if perma_ban_role else False
        
        previous_tickets = get_user_tickets(str(guild.id), str(member.id))
        previous_count = len(previous_tickets) - 1
        
        embed = discord.Embed(
            title='üîç –ó–∞—è–≤–∫–∞ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫',
            description=f'–£—á–∞—Å—Ç–Ω–∏–∫ {member.mention} –∑–∞–ø—Ä–æ—Å–∏–ª –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫: **{requested_nick}**',
            color=discord.Color.blue(),
            timestamp=datetime.now()
        )
        
        embed.add_field(
            name='üé´ –ù–æ–º–µ—Ä –∑–∞—è–≤–∫–∏',
            value=f'#{ticket_number}',
            inline=True
        )
        
        embed.add_field(
            name='üìú –ü—Ä–µ–¥—ã–¥—É—â–∏–µ –∑–∞—è–≤–∫–∏',
            value=f'{previous_count} –∑–∞—è–≤–æ–∫' if previous_count > 0 else '–ü–µ—Ä–≤–∞—è –∑–∞—è–≤–∫–∞',
            inline=True
        )
        
        embed.add_field(
            name='üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∞–∫–∫–∞—É–Ω—Ç–∞',
            value=f'{member.created_at.strftime("%d.%m.%Y %H:%M")} UTC\n({account_age_days} –¥–Ω–µ–π –Ω–∞–∑–∞–¥)',
            inline=False
        )
        
        embed.add_field(
            name='üìÖ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É',
            value=f'{member.joined_at.strftime("%d.%m.%Y %H:%M")} UTC' if member.joined_at else '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ',
            inline=False
        )
        
        embed.add_field(
            name='üö´ –†–æ–ª—å "–ø–µ—Ä–º–∞—á –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ"',
            value='‚úÖ –ï—Å—Ç—å' if has_perma_ban else '‚ùå –ù–µ—Ç',
            inline=False
        )
        
        warnings = []
        
        if account_age_days < 30:
            warnings.append(f'‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï**: –ê–∫–∫–∞—É–Ω—Ç —Å–æ–∑–¥–∞–Ω –Ω–µ–¥–∞–≤–Ω–æ ({account_age_days} –¥–Ω–µ–π)')
        
        if has_perma_ban:
            warnings.append('‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï**: –£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –µ—Å—Ç—å —Ä–æ–ª—å "–ø–µ—Ä–º–∞—á –±–∞–Ω –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –≤ –º–∞–π–Ω–∫—Ä–∞—Ñ—Ç–µ"')
        
        if previous_count > 0:
            warnings.append(f'‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï**: –£ —É—á–∞—Å—Ç–Ω–∏–∫–∞ —É–∂–µ –µ—Å—Ç—å {previous_count} –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –∑–∞—è–≤–æ–∫')
        
        if warnings:
            embed.add_field(
                name='‚ö†Ô∏è –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è',
                value='\n'.join(warnings),
                inline=False
            )
            embed.color = discord.Color.orange()
        else:
            embed.add_field(
                name='‚úÖ –°—Ç–∞—Ç—É—Å',
                value='–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞, –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–π –Ω–µ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ',
                inline=False
            )
            embed.color = discord.Color.green()
        
        embed.set_thumbnail(url=member.display_avatar.url)
        embed.set_footer(text=f'ID —É—á–∞—Å—Ç–Ω–∏–∫–∞: {member.id}')
        
        view = WhitelistDecisionView(ticket_number, str(guild.id), str(member.id), member.name)
        
        await channel.send(
            f'{admin_role.mention} {mod_role.mention}\n\n–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –≤ –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫!',
            embed=embed,
            view=view
        )
        
        await ctx.send(f'‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ #{ticket_number}: {channel.mention}')
        
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –°–æ–∑–¥–∞–Ω–∞ –∑–∞—è–≤–∫–∞ #{ticket_number} –¥–ª—è {member.name} (–Ω–∏–∫: {requested_nick})')
        
    except Exception as e:
        await ctx.send(f'‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞—è–≤–∫–∏: {str(e)}')
        print(f'[{datetime.now().strftime("%Y-%m-%d %H:%M:%S")}] –û–®–ò–ë–ö–ê –≤ –∫–æ–º–∞–Ω–¥–µ /nick: {e}')


# üîπ 9. –ó–∞–ø—É—Å–∫ Discord-–±–æ—Ç–∞
TOKEN = os.getenv('DISCORD_TOKEN')
if not TOKEN:
    print('–û–®–ò–ë–ö–ê: –¢–æ–∫–µ–Ω Discord –Ω–µ –Ω–∞–π–¥–µ–Ω!')
    print('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ DISCORD_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è')
else:
    bot.run(TOKEN)
